{"version":3,"sources":["features/counter/Counter.module.css","features/counter/counterAPI.js","features/counter/counterSlice.js","firebase.js","features/user/userSlice.js","components/Header.js","components/ImgSlider.js","components/Viewers.js","features/movie/movieSlice.js","components/Movies.js","components/Home.js","components/Detail.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","storage","userSlice","email","photo","reducer","setUserLogin","setSignOut","selectUserName","user","selectUserPhoto","Header","dispatch","useDispatch","history","useHistory","userName","useSelector","Nav","Logo","src","LogoContainer","Login","onClick","signInWithPopup","then","result","displayName","photoURL","NavMenu","UserImg","signOut","push","styled","nav","img","div","ImgSlider","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","autoPlay","Wrap","Slider","Viewers","Container","movieSlice","movies","setMovies","selectMovies","movie","Movies","Content","map","to","id","cardImg","Home","useEffect","collection","onSnapshot","snapshot","tempMovies","docs","doc","main","Detail","useParams","useState","setMovie","get","exists","Background","backgroundImg","ImageTitle","titleImg","Controls","PlayButton","TrailerButton","AddButton","GroupWatchButton","SubTitle","subTitle","Description","description","button","CTA","CTALogoOne","SignUp","CTALogoTwo","p","App","className","path","store","configureStore","movieReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,qD,+KCAvJ,SAASC,IAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,QCAhD,IAUaK,EAAiBC,YAC5B,qBAD4C,uCAE5C,WAAON,GAAP,eAAAO,EAAA,sEACyBR,EAAWC,GADpC,cACQQ,EADR,yBAGSA,EAASJ,MAHlB,2CAF4C,uDASjCK,EAAeC,YAAY,CACtCC,KAAM,UACNC,aArBmB,CACnBC,MAAO,EACPC,OAAQ,QAqBRC,SAAU,CACRC,UAAW,SAACC,GAKVA,EAAMJ,OAAS,GAEjBK,UAAW,SAACD,GACVA,EAAMJ,OAAS,GAGjBM,kBAAmB,SAACF,EAAOG,GACzBH,EAAMJ,OAASO,EAAOC,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQnB,EAAeoB,SAAS,SAACR,GAChCA,EAAMH,OAAS,aAEhBU,QAAQnB,EAAeqB,WAAW,SAACT,EAAOG,GACzCH,EAAMH,OAAS,OACfG,EAAMJ,OAASO,EAAOC,cAKvB,EAAoDZ,EAAakB,Q,GAAjE,EAAQX,UAAR,EAAmBE,UAAnB,EAA8BC,kBAgBtBV,EAAf,Q,iDC3DMmB,EADcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAIMC,YACjBC,EAAOV,IAASU,OAChBC,EAAW,IAAIX,IAASU,KAAKE,mBAIpBb,GAHCC,IAASa,UAGVd,G,eCXTe,EAAWjC,YAAY,CACzBC,KAAK,OACLC,aARgB,CAChBD,KAAM,GACNiC,MAAO,GACPC,MAAM,IAMNC,QAAQ,CACJC,aAAe,SAAC9B,EAAOG,GACnBH,EAAMN,KAAMS,EAAOC,QAAQV,KAC3BM,EAAM2B,MAAOxB,EAAOC,QAAQuB,MAC5B3B,EAAM4B,MAAOzB,EAAOC,QAAQwB,OAEhCG,WAAY,SAAC/B,GACTA,EAAMN,KAAM,KACZM,EAAM2B,MAAO,KACb3B,EAAM4B,MAAO,SAKlB,EAAmCF,EAAUhB,QAAtCoB,EAAP,EAAOA,aAAeC,EAAtB,EAAsBA,WAEhBC,EAAgB,SAAChC,GAAD,OAAUA,EAAMiC,KAAKvC,MAErCwC,EAAiB,SAAClC,GAAD,OAAUA,EAAMiC,KAAKL,OAEpCF,IAAf,QCqDeS,I,IAAAA,EAvEf,WACE,IAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAWC,YAAYT,GAqB3B,OApBgBS,YAAYP,GAqBxB,eAACQ,EAAD,WACK,cAACC,EAAD,CAAMC,IAAI,qBACPJ,EACD,cAACK,EAAD,UACA,cAACC,EAAD,CAAOC,QAvBL,WACXzB,EAAK0B,gBAAgBzB,GACpB0B,MAAK,SAACC,GACL,IAAIjB,EAAOiB,EAAOjB,KACjBG,EAASN,EAAa,CACpBpC,KAAOuC,EAAKkB,YACZxB,MAAQM,EAAKN,MACbC,MAAQK,EAAKmB,gBAgBT,qBAIE,qCACA,eAACC,EAAD,WACF,8BACE,qBAAKT,IAAI,0BACT,2CAEF,8BACE,qBAAKA,IAAI,4BACT,6CAEF,8BACE,qBAAKA,IAAI,+BACT,iDAEF,8BACE,qBAAKA,IAAI,8BACT,gDAEF,8BACE,qBAAKA,IAAI,2BACT,6CAEF,8BACE,qBAAKA,IAAI,4BACT,gDAGJ,cAACU,EAAD,CACAP,QA5CK,WACdzB,EAAKiC,UACJN,MAAK,WACHb,EAASL,KACTO,EAAQkB,KAAK,cAyCPZ,IAAI,0GAWXF,EAAMe,IAAOC,IAAV,mIAQHf,EAAMc,IAAOE,IAAT,2CAGJN,EAAQI,IAAOG,IAAR,86BA4CPN,EAAQG,IAAOE,IAAR,wGAOPb,EAAMW,IAAOG,IAAR,+UAoBLf,EAAcY,IAAOG,IAAR,uF,qCC1IJC,I,IAAAA,EAxBf,WASI,OACI,eAACC,GAAD,2BATS,CACTC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,IAGV,cACI,cAACC,GAAD,UACA,qBAAKzB,IAAI,iCAET,cAACyB,GAAD,UACA,qBAAKzB,IAAI,+BAET,cAACyB,GAAD,UACA,qBAAKzB,IAAI,sCAQfkB,GAAWL,YAAOa,IAAPb,CAAH,sRAqBRY,GAAKZ,IAAOG,IAAR,mXC7BKW,I,SAAAA,GAtBf,WACI,OACI,eAACC,GAAD,WACI,cAAC,GAAD,UACA,qBAAK5B,IAAI,iCAET,cAAC,GAAD,UACA,qBAAKA,IAAI,gCAET,cAAC,GAAD,UACA,qBAAKA,IAAI,iCAET,cAAC,GAAD,UACA,qBAAKA,IAAI,mCAET,cAAC,GAAD,UACA,qBAAKA,IAAI,uCAOf4B,GAAYf,IAAOG,IAAV,iMAQTS,GAAKZ,IAAOG,IAAR,uiB,SC3BJa,GAAahF,YAAY,CAE3BC,KAAM,SACNC,aARe,CAEf+E,OAAO,IAOP5E,SAAU,CACN6E,UAAW,SAAC3E,EAAQG,GAChBH,EAAM0E,OAAOvE,EAAOC,YAMjBuE,GAAaF,GAAW/D,QAAxBiE,UAEFC,GAAc,SAAC5E,GAAD,OAAUA,EAAM6E,MAAMH,QAElCD,MAAf,QCSeK,I,GAAAA,GAzBf,WAEI,IAAMJ,EAAQjC,YAAYmC,IAE1B,OACI,eAAC,GAAD,WACI,mDACA,cAACG,GAAD,UACCL,GACCA,EAAOM,KAAI,SAACH,GAAD,OAET,cAAC,GAAD,UACI,cAAC,KAAD,CAAMI,GAAE,kBAAaJ,EAAMK,IAA3B,SACC,qBAAKtC,IAAKiC,EAAMM,aAFVN,EAAMK,aAgB3BV,GAAUf,IAAOG,IAAR,kDAMTmB,GAAQtB,IAAOG,IAAR,uHAKPS,GAAOZ,IAAOG,IAAV,kkBCZKwB,I,8BAAAA,GAxBf,WACI,IAAMhD,EAAUC,cAchB,OAZDgD,qBAAU,WACN1E,EAAG2E,WAAW,UAAUC,YAAW,SAACC,GAChC,IAAIC,EAAYD,EAASE,KAAKV,KAAI,SAACW,GAC7B,OAAO,aAAET,GAAIS,EAAIT,IAAQS,EAAIxG,WAEpCiD,EAASuC,GAAUc,SAIxB,IAIG,eAAC,GAAD,WACI,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QAMNjB,GAAWf,IAAOmC,KAAT,8XCiCAC,I,kBAAAA,GA9Df,WACG,IAAOX,EAAMY,cAANZ,GACT,EAA0Ba,qBAA1B,mBAAOlB,EAAP,KAAemB,EAAf,KAmBG,OAjBAX,qBAAU,WAER1E,EAAG2E,WAAW,UACbK,IAAIT,GACJe,MACAhD,MAAK,SAAC0C,GACFA,EAAIO,QAELF,EAASL,EAAIxG,aAOhB,IAGC,cAAC,GAAD,UACK0F,GACC,qCACA,cAACsB,GAAD,UACA,qBAAKvD,IAAKiC,EAAMuB,kBAGlB,cAACC,GAAD,UACA,qBAAKzD,IAAKiC,EAAMyB,aAEhB,eAACC,GAAD,WACC,eAACC,GAAD,WACG,qBAAK5D,IAAI,gCACT,2CAEH,eAAC6D,GAAD,WACA,qBAAK7D,IAAI,gCACT,8CAEA,cAAC8D,GAAD,UACE,uCAEF,cAACC,GAAD,UACG,qBAAK/D,IAAI,gCAIb,cAACgE,GAAD,UACC/B,EAAMgC,WAEP,cAACC,GAAD,UACGjC,EAAMkC,oBAWfvC,GAAWf,IAAOG,IAAT,2HAOTuC,GAAW1C,IAAOG,IAAR,qMAeVyC,GAAY5C,IAAOG,IAAT,mLAYV2C,GAAU9C,IAAOG,IAAT,sEAIR4C,GAAY/C,IAAOuD,OAAT,qTAiBVP,GAAehD,YAAO+C,GAAP/C,CAAF,8HAKbiD,GAAWjD,IAAOuD,OAAT,6QAiBTL,GAAkBlD,YAAOiD,GAAPjD,CAAF,uDAIhBmD,GAASnD,IAAOG,IAAR,+GAORkD,GAAYrD,IAAOG,IAAR,+GCxIFd,OAhBf,WACI,OACI,cAAC,GAAD,UACI,eAACmE,GAAD,WACI,cAACC,GAAD,CAAYtE,IAAI,6BAChB,cAACuE,GAAD,4BAGA,cAAC,GAAD,iKACA,cAACC,GAAD,CAAYxE,IAAI,mCAS1B4B,GAAUf,IAAOG,IAAR,ucAwBTqD,GAAIxD,IAAOG,IAAR,wKAUHsD,GAAWzD,IAAOE,IAAR,kCAIVwD,GAAO1D,IAAOnE,EAAR,sVAsBNwH,GAAYrD,IAAO4D,EAAR,gHAOXD,GAAW3D,IAAOE,IAAR,8CCvDD2D,OArBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACC,eAAC,KAAD,WACC,cAAC,EAAD,IACE,eAAC,IAAD,WACG,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACA,cAAC,GAAD,MAEA,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACC,cAAC,GAAD,MAED,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACC,cAAC,GAAD,eCtBCC,GAAQC,YAAe,CAClC7F,QAAS,CACPgD,MAAQ8C,GACR1F,KAAMP,KCKUkG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJW,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvF,MAAK,SAACwF,GAClCA,EAAaC,kB","file":"static/js/main.ec48bcca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9BnlX96fMf7XiUVCFRsoQzG8DGERJkeY\",\n  authDomain: \"disneyplus-clone-a33d5.firebaseapp.com\",\n  projectId: \"disneyplus-clone-a33d5\",\n  storageBucket: \"disneyplus-clone-a33d5.appspot.com\",\n  messagingSenderId: \"37918794208\",\n  appId: \"1:37918794208:web:dbe9842dfe1dda522a4b85\",\n  measurementId: \"G-DRVLJKWRWG\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst storage = firebase.storage();\n\nexport { auth, provider, storage };\nexport default db;\n//{\"mode\":\"full\",\"isActive\":false};","import { createSlice} from \"@reduxjs/toolkit\"\n\nconst initialState= {\n    name: \"\",\n    email: \"\",\n    photo:\"\"\n}\n\nconst userSlice= createSlice({\n    name:\"user\",\n    initialState,\n    reducer:{\n        setUserLogin : (state, action)=>{\n            state.name= action.payload.name;\n            state.email= action.payload.email;\n            state.photo= action.payload.photo;\n        },\n        setSignOut: (state) => {\n            state.name= null;\n            state.email= null;\n            state.photo= null;\n        }\n    }\n})\n\nexport const {setUserLogin , setSignOut} =userSlice.actions;\n\nexport const selectUserName =(state )=>state.user.name;\nexport const selectUserEmail =(state )=>state.user.email;\nexport const selectUserPhoto =(state )=>state.user.photo;\n\nexport default userSlice.reducer;","import React from 'react'\nimport {auth , provider} from \"../firebase\"\nimport styled from 'styled-components'\nimport {useHistory} from 'react-router-dom'\n\nimport{\n    selectUserName,\n    selectUserPhoto,\n    setUserLogin,\n    setSignOut\n} from \"../features/user/userSlice\"\nimport { useDispatch , useSelector} from \"react-redux\"\n\nfunction Header() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const userName = useSelector(selectUserName);\n  const userPhoto = useSelector(selectUserPhoto);\n\n  const signIn = () => {\n      auth.signInWithPopup(provider)\n      .then((result)=>{\n        let user = result.user\n         dispatch(setUserLogin({\n           name : user.displayName,\n           email : user.email,\n           photo : user.photoURL\n         }))\n      })\n  }\n  const signOut = () =>{\n    auth.signOut()\n    .then(()=>{\n       dispatch(setSignOut());\n       history.push(\"/login\")\n    })\n  }\n    return (\n        <Nav>\n             <Logo src=\"/images/logo.svg\"/>\n             {  userName  ? (\n               <LogoContainer>\n               <Login onClick={signIn}>Login</Login>\n               </LogoContainer>\n                 )\n                 :\n                 <>\n                 <NavMenu>\n               <a>\n                 <img src=\"/images/home-icon.svg\"/>\n                 <span>HOME</span>\n               </a>\n               <a>\n                 <img src=\"/images/search-icon.svg\"/>\n                 <span>SEARCH</span>\n               </a>\n               <a>\n                 <img src=\"/images/watchlist-icon.svg\"/>\n                 <span>WATCHLLIST</span>\n               </a>\n               <a>\n                 <img src=\"/images/original-icon.svg\"/>\n                 <span>ORIGINALS</span>\n               </a>\n               <a>\n                 <img src=\"/images/movie-icon.svg\"/>\n                 <span>MOVIES</span>\n               </a>\n               <a>\n                 <img src=\"/images/series-icon.svg\"/>\n                 <span>series</span>\n               </a>\n             </NavMenu>\n             <UserImg \n             onClick={signOut} \n             src=\"https://lh3.googleusercontent.com/ogw/ADea4I7g3orZpWi_FCG-oPecHVjIgYra2_caqSMJSytuAa0=s32-c-mo\"/>\n                 </>\n\n             }\n             \n        </Nav>\n    )\n}\n\nexport default Header\n\nconst Nav = styled.nav`\n  height:70px;\n  background: #090b13;\n  display: flex;\n  align-items:center;\n  padding: 0 36px;\n  `\n\nconst Logo= styled.img`\n  width:80px;\n`\nconst NavMenu=styled.div`\n  display: flex;\n  flex:1;\n  margin-left:25px;\n  align-items:center;\n\n  a{\n      display: flex;\n      align-items: center;\n      padding: 0 12px;\n      cursor:pointer;\n\n      img{\n          height:20px;\n      }\n      span{\n          font-size: 13px; \n          letter-spacing: 1.42px;\n          position: relative; \n\n\n          &:after{\n              content:\"\";\n              height:2px;\n              background-color:white;\n              position: absolute;\n              left:0;\n              right:0;\n              bottom:-6px;\n              opacity:0;\n              \n              transform-origin:left-center;\n              transition: all 250ms cubic-bezier(0.25 ,0.46 ,0.45 ,0.94) 0s;\n              transform: scaleX(0);\n          }\n      }\n      &:hover{\n          span:after{\n              transform: scaleX(1);\n              opacity:1;\n          }\n      }\n  }\n`\nconst UserImg=styled.img`\n   width:48px;\n   height:48px;\n   border-radius:50%;\n   cursor:pointer;\n`\n\nconst Login=styled.div`\nborder : 1px solid #f9f9f9;\npadding: 8px 16px;\nborder-radius:4px;\nletter-spacing:1.5px;\ntext-transform: uppercase;\nbackground-color:rgba(0 ,0, 0, 0.6);\ntransition:all 0.2s ease 0s;\ncursor:pointer;\n\n\n&:hover{\n    background-color:#f9f9f9;\n    color:#000;\n    border-color:transparent;\n\n}\n\n\n`\nconst LogoContainer=styled.div`\n flex:1;\n display:flex;\n justify-content: flex-end;\n\n\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Slider from 'react-slick'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction ImgSlider() {\n    let settings={\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoPlay: true\n    };\n    return (\n        <Carousel {...settings}>\n            <Wrap>\n            <img src=\"/images/slider-badging.jpg\" />\n            </Wrap>\n            <Wrap>\n            <img src=\"/images/slider-badag.jpg\" />\n            </Wrap>\n            <Wrap>\n            <img src=\"/images/slider-badging.jpg\" />\n            </Wrap>\n        </Carousel>\n    );\n}\n\nexport default ImgSlider\n\nconst Carousel = styled(Slider)`\nmargin-top:20px;\n\nul li button {\n    &:before{\n        font-size:10px;\n        color: rgb (150, 150, 117);\n    }\n}\nli.slick-active button:before{\n    color : white;\n}\n.slick-list{\n    overflow: visible;\n}\nbutton {\n    z-index:1;\n}\n\n`\n\nconst Wrap=styled.div`\ncursor:pointer;\n img {\n     border : 4px solid transparent;\n     width:100%;\n     height:100%;\n     border-radius:4px;\n     box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n     rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n     transition-duration:300ms;\n\n     &:hover{\n         border: 4px solid rgba(249, 249, 249, 0.8);\n     }\n }\n\n`\n","import React from 'react'\nimport styled from 'styled-components'\nfunction Viewers() {\n    return (\n        <Container>\n            <Wrap>\n            <img src=\"/images/viewers-disney.png\" />\n            </Wrap>\n            <Wrap>\n            <img src=\"/images/viewers-pixar.png\" />\n            </Wrap>\n            <Wrap>\n            <img src=\"/images/viewers-marvel.png\" />\n            </Wrap>\n            <Wrap>\n            <img src=\"/images/viewers-starwars.png\" />\n            </Wrap>\n            <Wrap>\n            <img src=\"/images/viewers-national.png\" />\n            </Wrap>\n        </Container>\n    )\n}\n\nexport default Viewers\nconst Container = styled.div`\n        margin-top:30px;\n        display: grid;\n        padding :30px 0 26px;\n        grid-gap:25px;\n        grid-template-columns: repeat(5, minmax(0,1fr));\n\n`\nconst Wrap=styled.div`\n\n border: 3px solid rgba(249,249,249,0.1);\n border-radius:10px;\n cursor:pointer:\n box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n     rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n  img{\n      width:100%;\n      height:100%;\n      object-fit:cover;\n  }\n  &:hover{\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n    transition: all 250ms cubic-bezier(0.25 ,0.46 ,0.45 ,0.94) 0s;\n      transform :scale(1.05);\n      border: 4px solid rgba(249, 249, 249, 0.8);\n  }\n`","import {createSlice } from \"@reduxjs/toolkit\"\nconst initialState={\n\n    movies:[] \n}\n\nconst movieSlice = createSlice({\n\n    name: \" movie\",\n    initialState,\n    reducers :{\n        setMovies :(state , action)=>{\n            state.movies=action.payload;\n        }\n    }\n\n})\n\nexport const { setMovies }= movieSlice.actions;\n\nexport const selectMovies= (state)=> state.movie.movies;\n\nexport default movieSlice.reducer;","import React from 'react'\nimport styled from 'styled-components'\nimport { Link }  from \"react-router-dom\"\nimport {selectMovies} from \"../features/movie/movieSlice\"\nimport {useSelector} from \"react-redux\"\n\nfunction Movies() {\n\n    const movies= useSelector(selectMovies);\n\n    return (\n        <Container>\n            <h4>Recommend for you</h4>\n            <Content>\n            {movies && \n              movies.map((movie)=>(\n\n                <Wrap key={movie.id}>\n                    <Link to={`/detail/${movie.id}`}>\n                     <img src={movie.cardImg}/>\n                    </Link>\n                \n               </Wrap>\n              ))\n            }\n             \n            </Content>\n        </Container>\n    )\n}\n\nexport default Movies\n\nconst Container=styled.div`\n    padding:\n\n\n\n`\nconst Content=styled.div`\n  display : grid;\n  grid-gap:25px;\n  grid-template-columns: repeat(4, minmax(0,1fr));\n`\nconst Wrap = styled.div`\n   border-radius:10px;\n   overflow:hidden;\n   cursor:pointer;\n   border: 3px solid rgba(249, 249, 249, 0.1);\n   box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n    transition: all 250ms cubic-bezier(0.25 ,0.46 ,0.45 ,0.94) 0s;\n\n   img{\n    width:100%;\n    height:100%;\n    object-fit: cover;\n   }\n   &:hover{\n    transform :scale(1.05);\n    border-color:rgba(249, 249, 249, 0.8);\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\n    rgb(0 0 0 / 72%) 0px 30px 22px -10px;\n\n   }\n\n`\n","import React  , {useEffect}from 'react'\nimport styled from 'styled-components'\nimport ImgSlider from './ImgSlider'\nimport Viewers from './Viewers'\nimport Movies from './Movies'\nimport db from '../firebase'\nimport { useDispatch } from \"react-redux\"\nimport {setMovies} from \"../features/movie/movieSlice\"\nfunction Home() {\n    const dispatch= useDispatch();\n\n   useEffect(()=>{\n       db.collection(\"movies\").onSnapshot((snapshot)=>{\n           let tempMovies= snapshot.docs.map((doc)=>{\n                 return { id: doc.id , ...doc.data()}\n           })\n          dispatch(setMovies(tempMovies));\n\n\n       })\n   },[])\n\n\n    return (\n        <Container>\n            <ImgSlider />\n            <Viewers />\n            <Movies />\n        </Container>\n    )\n}\n\nexport default Home\nconst Container =styled.main`\n   min-height:calc(100vh - 70px);\n   padding: 0 calc(3.5vw + 5px);\n   position:relative;\n   overflow-x:hidden;\n   \n   &:before{\n    background:url(\"/images/home-background.png\") center center / cover \n    no-repeat fixed;\n    position: absolute;\n    content: \"\";\n    top:0;\n    bottom:0;\n    left:0;\n    right:0;\n    z-index -1;\n   }\n\n`\n","import React, {useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {useParams} from \"react-router-dom\"\nimport db from \"../firebase\"\nfunction Detail() {\n   const {id} = useParams();\n const [movie , setMovie] =useState()\n   \n    useEffect(()=>{\n     //grab the movies info from db\n      db.collection(\"movies\")\n      .doc(id)\n      .get()\n      .then((doc)=>{\n        if(doc.exists){\n          // save the movie data\n          setMovie(doc.data());\n        }\n        else{\n          //redirect to home\n        }\n      })\n\n    } ,[])\n\n    return (\n        <Container>\n            {movie && (\n              <>\n              <Background>\n              <img src={movie.backgroundImg}/>\n            \n            </Background>\n            <ImageTitle>\n            <img src={movie.titleImg}/>\n            </ImageTitle>\n            <Controls>\n             <PlayButton>\n                <img src=\"/images/play-icon-black.png\"/> \n                <span>PLAY</span>\n             </PlayButton>\n             <TrailerButton>\n             <img src=\"/images/play-icon-white.png\"/> \n             <span>TRAILER</span>\n             </TrailerButton>\n             <AddButton>\n               <span>+</span>\n             </AddButton>\n             <GroupWatchButton>\n                <img src=\"/images/group-icon.png\"/>\n             </GroupWatchButton>\n             \n            </Controls>\n            <SubTitle>\n            {movie.subTitle}\n            </SubTitle>\n            <Description>\n              {movie.description}\n            </Description>\n              </>\n            ) }\n            \n        </Container>\n    )\n}\n\nexport default Detail\n\nconst Container= styled.div`\n  min-height:calc(100vh - 70px);\n  padding : 0 calc(3.5vw + 5px);\n  position: relative;\n\n`\n\nconst Background=styled.div`\n position:fixed;\n top:0;\n left:0;\n bottom:0;\n right:0;\n z-index:-1;\n opacity:0.8;\n  img {\n      width:100%;\n      height:100%;\n      object-fit:cover;\n  }\n`\n\nconst ImageTitle= styled.div`\n height:30vh;\n min-height:170px;\n width:35vw;\n min-width :200px;\n   img{\n     width:100%;\n     height:100%;\n     object-fit:contain;\n\n   }\n`\nconst Controls= styled.div`\n  display:flex;\n  align-items:center;\n`\nconst PlayButton= styled.button`\n border-radius:4px;\n padding: 0px 24px;\n margin-right:22px; \n font-size:15px; \n display: flex;\n align-items:center;\n height:56px;\n background: rgb(249,249,249);\n border:none;\n letter-spacing:1.8px;\n cursor:pointer;\n\n &:hover{\n     background: rgb(198,198,198);\n }\n`\nconst TrailerButton= styled(PlayButton)`\n background: rgba(0,0,0,0.3);\n border:  1px solid rgb(249,249,249);\n color:rgb(249,249,249);\n`\nconst AddButton= styled.button`\nmargin-right:16px;\nwidth:44px;\nheight:44px;\ndisplay:flex\nalign-items:center;\njustify-content:center;\nborder-radius:50%;\nborder:white;\nbackground:rgba(0,0,0,0.6);\ncursor:pointer;\n\nspan{\n    font-size:30px;\n    color:white;\n}\n`\nconst GroupWatchButton= styled(AddButton)`\n background:rgb(0,0,0);\n`\n\nconst SubTitle=styled.div`\ncolor: rgb(249,249,249);\nfont-size:15px;\nmin-height:20px;\nmargin-top:26px;\n\n`\nconst Description=styled.div`\nline-height:1.4;\nfont-size:20px;\nmargin-top:16px;\ncolor: rgb(249,249,249);\n\n`","import React from 'react'\nimport styled from 'styled-components'\n\n\nfunction Login() {\n    return (\n        <Container>\n            <CTA>\n                <CTALogoOne src=\"/images/cta-logo-one.svg\" />\n                <SignUp>\n                Get All There\n                </SignUp>\n                <Description>To get started with React Router in a web app, you’ll need a React web app. If you need to create one, we recommend you try Create React App.</Description>\n                <CTALogoTwo src=\"/images/cta-logo-two.png\" />\n\n                </CTA>\n        </Container>\n    )\n}\n\nexport default Login\n\nconst Container=styled.div`\n   position:relative;\n   height: calc(100vh - 70px);\n   display:flex;\n   align-items:top;\n   justify-content:center;\n\n  {\n    background-position:top;\n    background-size:cover;\n    backgorund-repeat:no-repeat;\n    background-image: url(\"/images/login-background.jpg\");\n    position:absolute;\n    top:0;\n    bottom:0;\n    right:0;\n    left:0;\n    content:\"\";\n   // opacity:0.7;\n   \n    z-index= -1;\n }\n\n`\nconst CTA=styled.div`\n max-width:650px;\n padding:80px 40px;\n width:90%;\n display:flex;\n flex-direction:column;\n margin-top:100px;\n align-items:center;\n\n`\nconst CTALogoOne=styled.img`\n\n\n`\nconst SignUp=styled.a`\n width:100%;\n background-color:#0063e5;\n font-weight:bold;\n padding:17px 0;\n color:#f9f9f9;\n border-radius:4px;\n text-align:center;\n font-size:18px;\n cursor: pointer;\n transition : all 250ms;\n letter-spacing:1.5px\n margin-top:8px;\n margin-bottom:12px;\n\n\n &:hover{\n     background:#0483ee;\n }\n\n`\n\nconst Description=styled.p`\nfont-size:11px;\nletter-spacing:1.5px;\ntext-align:center;\nline-height:1.5px;\n\n`\nconst CTALogoTwo=styled.img`\nwidth:90%;\n\n\n`\n\n","import React from 'react';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Detail from './components/Detail';\nimport Login from './components/Login';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n      <Header/>\n        <Switch>\n           <Route path=\"/login\">\n           <Login />\n           </Route>\n           <Route path=\"/detail/:id\">\n            <Detail />\n           </Route>\n           <Route path=\"/\">\n            <Home />\n           </Route>\n        </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport movieReducer from '../features/movie/movieSlice'\nimport userReducer from \"../features/user/userSlice\"\nimport userSlice from '../features/user/userSlice';\nexport const store = configureStore({\n  reducer: {\n    movie : movieReducer,\n    user: userSlice\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}